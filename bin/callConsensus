#!/bin/bash
# conda create -n consensus -c bioconda -c conda-forge pysamstats samtools seqkit
# conda activate consensus

# $1 = reference fasta file
# $2 = bam file aligned on reference fasta file
# $3 = output prefix. 3 files are create: .samtools_consensus.fasta, .align_stats.tsv, .N_stats.tsv


#!/bin/bash

# Define usage function
usage() {
    echo " Consensus Sequence Caller and Statistics Calculation, by Gautier Richard, 05/02/2024.
 Takes a BAM and reference fasta file as input to output a consensus sequence. Parameters used are adequate for short reads alignment (Illumina, Proton).
 
 This tool outputs five files:
    .samtools_consensus.lowcov.fasta ; contains the consensus fasta sequences called with samtools consensus on all segments of the BAM file with the lowly covered nucleotides (<=3) as N.
    .align_stats.tsv ; contains the alignment statistics for all nucleotides of each sequence contained in the BAM file.
    .N_stats.tsv ; contains potential ambiguities alignment statistics for manual solving (ambiguities will always be N in the sequences).
    .lowcov.tsv ; contains the nucleotides that are not covered by enough reads to be trustfully called (<=3 reads).
    .bam.bai ; contains the bam index.

 Usage: $0 
    
    [ -r ] reference FASTA file name. Mandatory. Example: -r sample_ref.fasta

    [ -b ] input BAM file aligned on the reference fasta. Mandatory. Example: -b sample.bam

    [ -o ] output prefix. Mandatory. Example: -o sample

    [ -h ] Prints help."
}

# Set default values for arguments
arg_s=""

# Parse arguments with getopt
while getopts "r:b:o::h" opt; do
  case $opt in
    r)
      arg_r="${OPTARG}"
      ;;
    b)
      arg_b="${OPTARG}"
      ;;
    o)
      arg_o="${OPTARG}"
      ;;
    h)
      usage
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      usage
      exit 1
      ;;
  esac
done

# Check if arg_r is empty
if [ -z "$arg_r" ]; then
  echo "[ ERROR  ] No input reference fasta file provided. Example: $0 -r sample_ref.fasta"
  usage
  exit 1
fi


# Check if arg_b is empty
if [ -z "$arg_b" ]; then
  echo "[ ERROR  ] No input reference bam file provided. Example: $0 -b sample.bam"
  usage
  exit 1
fi

# Check if arg_o is empty
if [ -z "$arg_o" ]; then
  echo "[ ERROR  ] No output prefix provided. Example: $0 -o sample"
  usage
  exit 1
fi



START=$(date +%s)
time=$(date)


echo "[INFO] Indexing BAM File $arg_b"
samtools index $arg_b

echo "[INFO] Reporting alignment statistics to $3.align_stats.tsv"
pysamstats --fasta $arg_r --type variation $arg_b -S samtools -D 150000 > $arg_o.align_stats.tsv

echo "[INFO] Alignment-based consensus sequence calculation by samtools consensus"
samtools consensus -t :hiseq --het-scale 0.42 --low-MQ 9 --scale-MQ 1.15 -o $arg_o.samtools_consensus.fasta $arg_b

echo "[INFO] Reporting potential ambiguities statisticis to $arg_o.N_stats.tsv"
header=$(head -n 1 $arg_o.align_stats.tsv)
echo "ID	$header" > $arg_o.N_stats.tsv
join <(seqkit locate -P -p "N" $arg_o.samtools_consensus.fasta | awk '{print $1"_"$5}' | sort -k1,1) <(awk '{print $1"_"$2"\t"$0}' $arg_o.align_stats.tsv | sort -k1,1) | sed 's; ;\t;g' | sort -k1,1 -k2,2n >> $arg_o.N_stats.tsv

echo "[INFO] Masking lowly covered nucleotides from the consensus sequence with N (<=3 reads)"
awk '$5 <= 3' $arg_o.align_stats.tsv | awk '{print $1"\t"$2":N"}' > $arg_o.lowcov.tsv
seg=$(awk '{print $1}' $arg_o.lowcov.tsv | sort | uniq)
cp $arg_o.samtools_consensus.fasta $arg_o.samtools_consensus.lowcov.fasta
echo "$seg" | while read -r s
do 
	mutations=$(cat $arg_o.lowcov.tsv | grep $s | awk '{print $2}' | sed -z 's/\n/ -p /g;s/ -p $/ -s '$s'\n/' | sed 's;^;-p ;g')
	seqkit mutate $mutations $arg_o.samtools_consensus.lowcov.fasta > $arg_o.samtools_consensus.lowcov.tmp; mv $arg_o.samtools_consensus.lowcov.tmp $arg_o.samtools_consensus.lowcov.fasta
done

rm $arg_o.samtools_consensus.fasta

END=$(date +%s);
time=$(echo $((END-START)) | awk '{print int($1/60)"min and "int($1%60)"sec"}')
echo "[INFO] Finished in $time. Check the consensus sequence stored in: $arg_o.samtools_consensus.lowcov.fasta"

